{"version":3,"file":"static/js/890.cfcf3d1a.chunk.js","mappings":"iOAuEA,UA/DoB,WAClB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,EAAYJ,EAAaK,IAAI,UAEnCC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAGA,IAAMG,EAAW,mCAAG,WAAMC,GAAN,kGAEOC,EAAAA,EAAAA,IAAA,UAjBd,6CAiBc,mBAhBf,mCAgBe,iCACiCD,EADjC,gCAFP,gBAERE,EAFQ,EAERA,KAIRZ,EAAUY,EAAKC,SANC,gDAQhBC,QAAQC,IAAR,MARgB,yDAAH,sDAWjBN,EAAYH,EAZX,CAaF,GAAE,CAACA,IAWJ,OACE,iCACE,kBAAMU,SAPW,SAAAC,GACnBA,EAAEC,iBACFf,EAAe,CAAEN,MAAAA,IACjBC,EAAS,GACV,EAGG,WACE,kBACEqB,SAba,SAAAF,GACnB,IAAQP,EAAUO,EAAEG,OAAZV,MACRZ,EAASY,EACV,EAWOW,KAAK,OACLC,YAAY,eACZC,KAAK,QACLb,MAAOb,KAET,mBAAQwB,KAAK,SAAb,wBAGF,wBACGtB,EAAOyB,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMzB,GAAxC,SACGqB,EAAMK,SAFFL,EAAME,GAMlB,QAIR,C","sources":["components/SearchMovie/SearchMovie.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie?';\nconst API_KEY = '30c2328b2ce92a2dec1b35516df54c65';\n\nconst SearchMovie = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSerchParams] = useSearchParams();\n\n  const location = useLocation();\n  const movieName = searchParams.get('query');\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    const handleFetch = async value => {\n      try {\n        const { data } = await axios.get(\n          `${BASE_URL}api_key=${API_KEY}&language=en-US&query=${value}&page=1&include_adult=false`\n        );\n\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    handleFetch(movieName);\n  }, [movieName]);\n\n  const handelChange = e => {\n    const { value } = e.target;\n    setQuery(value);\n  };\n  const handelSubmit = e => {\n    e.preventDefault();\n    setSerchParams({ query });\n    setQuery('');\n  };\n  return (\n    <>\n      <form onSubmit={handelSubmit}>\n        <input\n          onChange={handelChange}\n          type=\"text\"\n          placeholder=\"Search movie\"\n          name=\"query\"\n          value={query}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n\n      <ul>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default SearchMovie;\n\nSearchMovie.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};"],"names":["useState","query","setQuery","movies","setMovies","useSearchParams","searchParams","setSerchParams","location","useLocation","movieName","get","useEffect","handleFetch","value","axios","data","results","console","log","onSubmit","e","preventDefault","onChange","target","type","placeholder","name","map","movie","to","id","state","from","title"],"sourceRoot":""}