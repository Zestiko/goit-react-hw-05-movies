{"version":3,"file":"static/js/947.b4744452.chunk.js","mappings":"iOAwEA,UAlEqB,WAAO,IAAD,QACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GAEZ,OAA4BI,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAgBA,IAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,WAAMC,GAAN,kGAEOC,EAAAA,EAAAA,IAAA,6CACiBD,EADjB,6DAFP,gBAERE,EAFQ,EAERA,KAGRL,EAAUK,GALM,gDAOhBT,QAAQC,IAAR,MAPgB,yDAAH,sDAUjBK,EAAYV,EACb,GAAE,CAACA,IAEW,OAAXO,EAAJ,CAIA,IAAQO,EACNP,EADMO,MAAOC,EACbR,EADaQ,aAAcC,EAC3BT,EAD2BS,SAAUC,EACrCV,EADqCU,OAAQC,EAC7CX,EAD6CW,YAAaC,EAC1DZ,EAD0DY,aAG5Df,QAAQC,IAAIS,GACZV,QAAQC,IAAIU,EAAaK,MAAM,EAAG,IAElC,IAAMC,EAAaJ,EAAOK,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,KAAe,EAATZ,GAErC,MADU,UAAMY,EAAN,IAEX,IACD,OACE,iCACE,SAAC,KAAD,CAAMC,GAAE,oBAAEtB,EAASuB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,SAAlC,mBACA,4BACE,gBAAKC,IAzCa,kCAyCYT,EAAaU,IAAI,SAASC,OAAO,SAC/D,4BACE,0BAAKf,EAAL,QACA,wCAAgBK,EAAhB,QACA,sCACA,uBAAIH,KACJ,oCACA,uBAAIK,WAGR,4BACE,2BACE,SAAC,KAAD,CAAMG,GAAG,QAAQC,MAAO,CAAEC,KAAI,UAAExB,EAASuB,aAAX,aAAE,EAAgBC,MAAhD,oBAGA,SAAC,KAAD,CAAMF,GAAG,UAAUC,MAAO,CAAEC,KAAI,UAAExB,EAASuB,aAAX,aAAE,EAAgBC,MAAlD,yBAIF,SAAC,EAAAI,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WApCP,CAyCF,C","sources":["components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\n\nconst MOVIE_POSTER_LINK = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  console.log(location);\n\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    const hendleFetch = async id => {\n      try {\n        const { data } = await axios.get(\n          `https://api.themoviedb.org/3/movie/${id}?api_key=30c2328b2ce92a2dec1b35516df54c65&language=en-US`\n        );\n        setMovies(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    hendleFetch(movieId);\n  }, [movieId]);\n\n  if (movies === null) {\n    return;\n  }\n\n  const { title, release_date, overview, genres, poster_path, vote_average } =\n    movies;\n\n  console.log(title);\n  console.log(release_date.slice(0, 4));\n  // TODO fix bugs with dots\n  const genresPars = genres.map(({ name, id }) => {\n    const gens = `${name} `;\n    return gens;\n  });\n  return (\n    <>\n      <Link to={location.state?.from ?? '/movie'}>Back</Link>\n      <div>\n        <img src={MOVIE_POSTER_LINK + poster_path} alt=\"Poster\" height=\"500\" />\n        <div>\n          <h1>{title}:</h1>\n          <p>User Score: {vote_average} </p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genresPars}</p>\n        </div>\n      </div>\n      <div>\n        <ul>\n          <Link to=\"casts\" state={{ from: location.state?.from }}>\n            Casts\n          </Link>\n          <Link to=\"reviews\" state={{ from: location.state?.from }}>\n            Reviews\n          </Link>\n        </ul>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","location","useLocation","console","log","useState","movies","setMovies","useEffect","hendleFetch","id","axios","data","title","release_date","overview","genres","poster_path","vote_average","slice","genresPars","map","name","to","state","from","src","alt","height","Suspense","fallback"],"sourceRoot":""}